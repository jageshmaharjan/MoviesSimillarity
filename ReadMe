--------INSTRUCTION NOTES---------
1) Java object from XML Schema
After Generating  xsd file from xml, using IntelliJ tool from  Tools-> XML Action -> Generate XSD schema from XML Schema.
Please make sure to edit the xsd file, by changing:
<xs:complexType mixed="true"> to <xs:complexType>
This will enable to have a data in the object created by XML file, else you would be wondering on not having a data.
Then generate a Java object by selecting the xsd schema file, go to Tools-> JAXB-> generate java code from XML schema using XMLbean...
After you create your own Java class to read a data from xml file. Please check the Java Class on the given package

--------PROJECT STRUCTURE NOTE----------------
1) The Database is in the form of XML Schema. IMDB Data is in input/IMDB/..  and RottenTomatoes Data is in input/RottenTomatoes/....
2) The Machine Generated (from IntelliJ tool) Java code of xml schema for IMDB id under "com.thu.simillarity.IMDBJavaObjectCode" package in src folder.
    Simillarly, Machine Generated (from IntelliJ tool) Java code of xml schema for RottenTomatoes id under "com.thu.simillarity.RottenTomatoesJavaObjectCode" package in src folder.
3) To read a Xml file, the IMDB data reader is under "com.thu.simillarity.IMDBPackage" package with a java file named "ReadIMDBXMLFile".
    Simillarly, to read a Xml file, the RottenTomatoes data reader is under "com.thu.simillarity.IMDBPackage" package with a java file named "ReadRottenTomatoesXMLFile".
4) In a java class "JaccardSimillarity",
    Each movie in IMDB is compared with each movie in RottenTomatoes, the computation cost is about (n x n)
    The string in each movie title is first converted to n-gram List of string.
    The value for n is determined as 2, because it make sense for the movie title.
    For example: if movie_1 is "i am the man" and another movie_2 is "am i the man".
    During computation of the Jaccard-simillarity, where JSim(movie_1,movie_2) = (movie_1 n movie_2) / movie_1 u movie_2).
    we obtain (movie_1 u movie_2) = 4 and (movie_1 n movie_2)=4 .
    Therefore, JSim(movie_1, movie_2)= 4/4 = 1. which is quite not true. because those two are two different movies.
    when, n-gram index is 2.
    (movie_1 n movie_2) = 2 and (movie_1 u movie_2) = 4
    and JSim(movie_1 , movie_2) = 2/4 = 0.5, which is less than 1. This make sense, as two movies are different movie.
5) The Movie duration in each domain differs slighly more or less by 10 minutes because of cast consideration.
    Therefore, the fault tolerance of +-10, is assigned to duration.
6)